---
import type { HTMLAttributes } from 'astro/types';

type AnchorProps = HTMLAttributes<'a'> & { type?: never, variant?: 'primary' | 'secondary' };
type ButtonProps = HTMLAttributes<'button'> & { href?: never, variant?: 'primary' | 'secondary' };

type Props = ButtonProps | AnchorProps;

const { href, class: className, variant = 'primary', ...rest } = Astro.props;

const baseClasses = 'px-6 pt-3 pb-3.5 inline-flex items-center gap-x-2 text-sm font-semibold rounded-full transition';

const variantClasses = {
  primary: 'text-white bg-custom-blue hover:bg-custom-pink hover:text-white dark:bg-custom-pink dark:hover:bg-custom-blue dark:text-white',
  secondary: 'text-main border border-main hover:border-custom-pink hover:text-main',
};

const buttonClasses = `${baseClasses} ${variantClasses[variant]}`;
---
{
    href ? (
        <a href={`${import.meta.env.BASE_URL}${href}`} class:list={[buttonClasses, className]} {...rest}>
            <slot />
        </a>
    ) : (
        <button class:list={[buttonClasses, className]} {...rest}>
            <slot />
        </button>
    )
}
